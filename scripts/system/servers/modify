#!/usr/bin/php
<?php

use Phoundation\Accounts\Roles\Role;
use Phoundation\Accounts\Servers\Server;
use Phoundation\Core\Log\Log;
use Phoundation\Data\DataEntry\Exception\DataEntryNotExistsException;
use Phoundation\Data\Validator\ArgvValidator;


/**
 * Script system/servers/modify
 *
 * This script will modify a server with the specified properties
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
$usage = './cli system servers modify USER [OPTIONS]
./cli system servers modify USER -l -i --to ENVIRONMENT';

$help  = 'This script allows you to modify servers



ARGUMENTS (All arguments in square brackets are optional)


USER                                    The server to modify. Always specify servers by their email addresses

-e / --email                            The email address for the server

-n / --name                             The name for the server

-r / --roles ROLE[,ROLE,ROLE]           A comma separated list of the roles that this server has on this system. The roles 
                                        must already exist. These roles will grant the server rights which will give him 
                                        or her access to the various parts of the system

[-g / --gender]

[-t / --title]

[-l / --language]

[-d / --description]

[-c / --comments]

[-u / --servername]

[-a / --address]

[-w / --website]

[-p / --phones]

[-b / --birthday]

[-t / --timezone]

[--hostname]                              The hostname where this server is valid

[--lead-by]

[--country]                             The country where the server resides

[--state]                               The state where the server resides

[--city]                                The city where the server resides

[--is-leader]                           If specified, this server will be registered as having a leadership position';



// Validate arguments
ArgvValidator::new()
    ->select('server', true)->isEmail()
    ->select('-a,--address', true)->isOptional()->hasMaxCharacters(255)->isPrintable()
    ->select('-b,--birthday', true)->isOptional()->isDate()
    ->select('-c,--comments', true)->isOptional()->isDescription()
    ->select('-d,--description', true)->isOptional()->isDescription()
    ->select('-e,--email', true)->isOptional()->isEmail()
    ->select('-g,--gender', true)->isOptional()->isGender()
    ->select('-l,--language', true)->isOptional()->isName()
    ->select('-n,--name', true)->isOptional()->isName()
    ->select('-p,--phones', true)->isOptional()->isPhones()
    ->select('-t,--title', true)->isOptional()->isName()
    ->select('-u,--servername', true)->isOptional()->isDescription()->isName()
    ->select('-w,--website', true)->isOptional()->isUrl()
    ->select('--first-names')->isOptional()->isName()
    ->select('--last-names')->isOptional()->isName()
    ->select('--hostname', true)->isOptional()->isDomain()
    ->select('--is-leader')->isOptional(false)->isBoolean()
    ->select('--lead-by', true)->isOptional()->isEmail()
    ->select('--timezone', true)->isOptional()->isTimezone()
    ->select('--country', true)->isOptional()->isName()
    ->select('--state', true)->isOptional()->isName()
    ->select('--city', true)->isOptional()->isName()
    ->select('--company', true)->isOptional()->isName()
    ->select('--department', true)->isOptional()->isName()
    ->select('--branch', true)->isOptional()->isName()
    ->select('-r,--roles,--role', true)->isOptional()->sanitizeForceArray()->each()->isName()
    ->noArgumentsLeft()
    ->validate();



try {
    // Ensure that specified roles exist
    if ($argv['roles']) {
        foreach ($argv['roles'] as &$role) {
            $role = Role::get($role);
        }

        unset($role);
    }

    // Modify server and save
    $server = Server::get($argv['server'])
        ->setEmail($argv['email'])
        ->setFirstNames($argv['first_names'])
        ->setLastNames($argv['last_names'])
        ->setTitle($argv['title'])
        ->setGender($argv['gender'])
        ->setLanguage($argv['language'])
        ->setDescription($argv['description'])
        ->setComments($argv['comments'])
        ->setServername($argv['servername'])
        ->setAddress($argv['address'])
        ->setWebsite($argv['website'])
        ->setPhones($argv['phones'])
        ->setBirthday($argv['birthday'])
        ->setTimezone($argv['timezone'])
        ->setLeader($argv['lead_by'])
        ->setIsLeader($argv['is_leader'])
        ->setCountry($argv['country'])
        ->setState($argv['state'])
        ->setCity($argv['city'])
        ->setCompany($argv['company'])
        ->setBranch($argv['branch'])
        ->setDepartment($argv['department'])
        ->save();

    // Set servers roles
    $server->roles()->set($argv['roles']);

}catch (DataEntryNotExistsException $e) {
    throw $e->makeWarning();
}



// Done!
Log::success(tr('Modified server ":server"', [':server' => $server->getDisplayName()]));