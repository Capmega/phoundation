#!/usr/bin/php
<?php
/*
 * This script will backup a table or database, then drop it,
 * and then reload it from the SQL backup.
 */
require_once(__DIR__.'/../../../libs/startup.php');

$noclean  = cli_argument('noclean', false, cli_argument('nocleanup', false));
$backup   = cli_argument('backup');
$database = cli_argument('database', true, cli_argument('db', true));
$table    = cli_argument('table', true);
$time     = new DateTime();
$time     = $time->format('YmdHis');

if (!$user = cli_argument('username', true)) {
    throw new CoreException(tr('No database username specified'), 'not-specified');
}

if (!$password = cli_argument('password', true)) {
    throw new CoreException(tr('No database password specified'), 'not-specified');
}

if (!$database) {
    throw new CoreException(tr('No database specified'), 'not-specified');
}

Path::ensure(TMP.'dropload');
Path::ensure(ROOT.'data/backups/databases');

if ($table) {
    /*
     * Dump a temp from the table, and a complete backup of the entire database
     */
    $file = TMP.'dropload/'.$database.'.'.$table.'.sql';
    file_delete($file);

    log_console('Dumping table ":table" from database ":database"', array(':table' => $table, ':database' => $database), 'cyan');
    safe_exec(array('commands' => array('mysqldump', array('-u', $user, '-p'.$password, '--database', $database, '--table', $table, 'redirect' => ' > '.$file.' 2> /dev/null'))));

} else {
    /*
     * Dump a temp from the table, and a complete backup of the entire database
     */
    $file = TMP.'tables/'.$database.'.sql';
    file_delete($file);

    log_console(tr('Dumping database ":database"', array(':database' => $database)), 'cyan');
    safe_exec(array('commands' => array('mysqldump', array('-u', $user, '-p'.$password, '--database', $database, '--table', $table, 'redirect' => ' > '.$file))));
}

if ($backup) {
    log_console(tr('Creating extra backup of database ":database" in data/backups/databases', array(':database' => $database)), 'cyan');
    safe_exec(array('commands' => array('mysqldump', array('-u', $user, '-p'.$password, '--database', $database, 'connector' =>'|'),
                                        'gzip'     , array('redirect' => ' > '.ROOT.'data/backups/databases/'.$database.'.'.$time.'.sql.gz'))));
}

if ($table) {
    /*
     * Reload the table
     */
//log_console('Dropping table "'.Strings::Log($table).'" database "'.Strings::Log($database).'"', 'dropload');
//safe_exec('mysql -u '.$user.' -p'.$password.' -e \'DROP TABLE '.$database.'.'.$table.'\'');

    log_console('Reloading table ":table" from database ":database"', array(':table' => $table, ':database' => $database), 'cyan');
    safe_exec(array('commands' => array('mysql', array('-u', $user, '-p'.$password, '--database', $database, 'redirect' => ' < '.$file))));

} else {
    /*
     * Reload the database
     */
//log_console('Dropping database "'.Strings::Log($database).'"', 'dropload');
//safe_exec('mysql -u '.$user.' -p'.$password.' -e \'DROP DATABASE '.$database.'\'');

    log_console(tr('Reloading database ":database"', array(':database' => $database)), 'cyan');
    safe_exec(array('commands' => array('mysql', '-u', $user, '-p'.$password, '--database', $database, 'redirect' => ' < '.$file)));
}

if (!$noclean) {
    /*
     * Cleanup the temp files as best as possible
     */
    file_clear_path($file);
}

if ($table) {
    log_console(tr('Fixed table ":table" from database ":database"', array(':table' => $table, ':database' => $database)), 'green');

} else {
    log_console(tr('Fixed database ":database"', array(':database' => $database)), 'green');
}
?>
