#!/usr/bin/php
<?php
/*
 * This is a phoundation front-end script for rsync. Since phoundation knows remote servers and how to access them, it makes it easier to execute rsync
 */
$usage = './scripts/base/rsync
./scripts/base/rsync source target';

$help  = 'No help available';

cli_only();
load_libs('rsync');

/*
 * Minimum required parameters
 */
$params['source'] = cli_argument(0);
$params['target'] = cli_argument(1);

/*
 * Check for optional parameters
 */
$params['append']              = cli_argument('--append');
$params['append_verify']       = cli_argument('--append-verify');
$params['archive']             = cli_argument('-a,--archive');
$params['checksum']            = cli_argument('-c,--checksum');
$params['compression']         = cli_argument('-z,--compress');
$params['delete']              = cli_argument('--delete');
$params['force']               = cli_argument('--force');
$params['function']            = cli_argument('-f,--function');
$params['group']               = cli_argument('-g,--group');
$params['human']               = cli_argument('-h,--human-readable');
$params['inplace']             = cli_argument('--inplace');
$params['links']               = cli_argument('-l,--links');
$params['owner']               = cli_argument('--owner');
$params['permissions']         = cli_argument('-p,--perms,--permissions');
$params['progress']            = cli_argument('--progress');
$params['recursive']           = cli_argument('-r,--recursive');
$params['remote_rsync']        = cli_argument('--rsync-path');
$params['remove_source_files'] = cli_argument('--remove-source-files');
$params['ssh_options']         = cli_argument('--ssh-options');
$params['sparse']              = cli_argument('-s,--sparse');
//$params['super']               = cli_argument('--');
$params['times']               = cli_argument('-t,--times');
$params['monitor_pid']         = cli_argument('--monitor-pid');
$params['monitor_task']        = cli_argument('--monitor-task');

try {
    rsync($params);

}catch(Exception $e) {
    switch ($e->getRealCode()) {
        case 'invalid':
            throw $e->makeWarning(true);
    }

    throw $e;
}
?>
