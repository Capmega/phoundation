#!/usr/bin/php
<?php
/*
 * This script can compress CSS and JS files
 */
$usage = "./scripts/base/compress OPTIONS\n".
         "./scripts/base/compress [--all|--js|--css|--test /path/to/test/tree]\n";
         "./scripts/base/compress\n";

$help  = "This script can compress both CSS and JS files using the uglify-css and uglify-js Node-JS libraries

OPTIONS

--css                          - Compress only CSS type files

--js                           - Compress only javascript type files

--all                          - Compress all file types

--force-compress, -f           - Compress all files, even when the source has
                                 not changed
";

require_once(__DIR__.'/../../libs/startup.php');

cli_only();
load_libs('uglify');

$js    = cli_argument('--js');
$all   = cli_argument('--all,-a');
$css   = cli_argument('--css');
$force = cli_argument('--force-compress,-f');

if (TEST) {
    $path = arguments();
}

cli_no_arguments_left();

if (!$js and !$css) {
    $all = true;
}

if (TEST) {
    if (!$path) {
        throw new CoreException('No test path specified.', 'not-specified');
    }

    log_console(tr('Running compression test'), 'white');
    uglify_js($path, $force);
    log_console(tr('Finished compression test'), 'green');

} else {
    if ($css or $all) {
        log_console(tr('Compressing CSS files'), 'white');
        uglify_css(null, $force);
        log_console(tr('Finished compressing CSS files'), 'green');
    }

    if ($js or $all) {
        log_console(tr('Compressing javascript files'), 'white');
        uglify_js(null, $force);
        log_console(tr('Finished compressing javascript files'), 'green');
    }
}
