#!/usr/bin/php
<?php

declare(strict_types=1);

use Phoundation\Cli\Documentation;
use Phoundation\Core\Log\Log;
use Phoundation\Data\Validator\ArgvValidator;
use Phoundation\Databases\Mysql;
use Phoundation\Developer\Project\Project;
use Phoundation\Exception\UnderConstructionException;


/**
 * Script system/databases/import
 *
 * This script will import the specified database file into the specified database
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
Documentation::usage('./pho system databases import -d mysql -b system -f system.sql');

Documentation::help('This script will import the specified database file into the specified database


ARGUMENTS


-d / --driver DRIVER                    The database driver to use. One of MySQL, Redis, MongoDB, or elastic(search).
                                        The name is not case sensitive (NOTE: For the moment only MySQL is supported)

-b / --database DATABASE                The database in which to import the import file

-f / --file FILE                        The file which to import');


// Validate arguments
$argv = ArgvValidator::new()
    ->select('-d,--driver', true)->sanitizeLowercase()->isInArray(['mysql', 'redis', 'mongo', 'mongodb', 'elastic', 'elasticsearch'])
    ->select('-b,--database', true)->isVariable()
    ->select('-f,--file', true)->isFile(PATH_DATA . 'sources/', PATH_DATA . 'sources/')
    ->noArgumentsLeft()
    ->validate();


switch ($argv['driver']) {
    case 'mysql':
        Mysql::import($argv['database'], $argv['file']);
        Log::success(tr('Finished importing MySQL dump file ":file" to database ":database"', [
            ':file'     => $argv['file'],
            ':database' => $argv['database'],
        ]));

        break;

    case 'redis':
        // no break
    case 'mongo':
        // no break
    case 'mongodb':
        // no break
    case 'elastic':
        // no break
    case 'elasticsearch':
        // no break
        throw new UnderConstructionException();
}
