#!/usr/bin/php
<?php

use Phoundation\Accounts\Rights\Right;
use Phoundation\Accounts\Roles\Role;
use Phoundation\Core\Log\Log;
use Phoundation\Data\DataEntry\Exception\DataEntryNotExistsException;
use Phoundation\Data\Validator\ArgvValidator;


/**
 * Script system/accounts/roles/create
 *
 * This script will create a new role with the specified properties
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
$usage = './cli system accounts roles create -n NAME [OPTIONS]
./cli system accounts roles create -n test -d "This is a test role!"';

$help  = 'This script allows you to create roles



ARGUMENTS



-n / --name                             The name for the role

[-d / --description]                    The description for the role

[-r / --rights] RIGHT[,RIGHT,RIGHT,...] The rights for this role';



// Validate arguments
ArgvValidator::new()
    ->select('role', true)->isName()
    ->select('-n,--name', true)->isOptional(null)->isName()
    ->select('-d,--description', true)->isOptional(null)->isDescription()
    ->select('-r,--rights,--right', true)->isOptional(null)->sanitizeForceArray()->each()->isName()
    ->noArgumentsLeft()
    ->validate();



// Ensure that specified roles exist
if ($argv['rights']) {
    foreach ($argv['rights'] as &$right) {
        $right = Right::get($right);
    }

    unset($right);
}



// Load role, ensure the new name doesn't exist yet, then modify it, save it
$role = Role::get($argv['role']);

if ($argv['name']) {
    // If changing name, ensure it doesn't exist yet as its a unique identifier
    Role::notExists($argv['name'], $role->getId(), true);
}

$role->modify($argv)->save();



// Set the rights for this role
$role->rights()->set($argv['rights']);



// Done!
Log::success(tr('Modified role ":role"', [':role' => $role->getName()]));