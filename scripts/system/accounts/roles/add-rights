#!/usr/bin/php
<?php

use Phoundation\Accounts\Rights\Right;
use Phoundation\Accounts\Roles\Role;
use Phoundation\Core\Log\Log;
use Phoundation\Data\DataEntry\Exception\DataEntryNotExistsException;
use Phoundation\Data\Validator\ArgvValidator;


/**
 * Script system/accounts/roles/add-right
 *
 * This script will create a new role with the specified properties
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
$usage = './cli system accounts roles add-right NAME "RIGHT[,RIGHT,RIGHT,...]"
./cli system accounts roles add-right -n test -d "This is a test role!"';

$help  = 'This script allows you to add rights to the specified role



ARGUMENTS (All arguments in square brackets are optional)



NAME                                    The identifier name of the role to which the rights shoudl be added

RIGHT[,RIGHT,RIGHT,...]                 The rights linked with the role. Each user that gets this role assigned will 
                                        also get these rights assigned';



// Validate arguments
ArgvValidator::new()
    ->select('role', true)->isName()
    ->select('rights', true)->isOptional(null)->sanitizeForceArray()->each()->isName()
    ->noArgumentsLeft()
    ->validate();



try {
    // Ensure that specified $rights exist
    if ($argv['rights']) {
        foreach ($argv['rights'] as &$right) {
            $right = Right::get($right);
        }

        unset($right);
    }

    // Check role exists, get role, and add rights
    $role = Role::get($argv['role']);
    $role->rights()->add($argv['rights']);

}catch (DataEntryNotExistsException $e) {
    throw $e->makeWarning();
}



// Done!
Log::success(tr('Modified role ":role"', [':role' => $role->getName()]));