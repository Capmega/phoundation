#!/usr/bin/php
<?php

use Phoundation\Accounts\Roles\Role;
use Phoundation\Accounts\Users\User;
use Phoundation\Core\Log\Log;
use Phoundation\Data\DataEntry\Exception\DataEntryNotExistsException;
use Phoundation\Data\Validator\ArgvValidator;


/**
 * Script system/accounts/users/modify
 *
 * This script will modify a user with the specified properties
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
$usage = './cli system accounts users modify USER [OPTIONS]
./cli system users modify USER -l -i --to ENVIRONMENT';

$help  = 'This script allows you to modify users



ARGUMENTS


USER                                    The user to modify. Always specify users by their email addresses

-e / --email                            The email address for the user

-n / --name                             The name for the user

-r / --roles ROLE[,ROLE,ROLE]           A comma separated list of the roles that this user has on this system. The roles 
                                        must already exist. These roles will grant the user rights which will give him 
                                        or her access to the various parts of the system

[-g / --gender]

[-t / --title]

[-l / --language]

[-d / --description]

[-c / --comments]

[-u / --username]

[-a / --address]

[-w / --website]

[-p / --phones]

[-b / --birthday]

[-t / --timezone]

[--domain]                              The domain where this user is valid

[--lead-by]

[--country]                             The country where the user resides

[--state]                               The state where the user resides

[--city]                                The city where the user resides

[--is-leader]                           If specified, this user will be registered as having a leadership position';



// Validate arguments
ArgvValidator::new()
    ->select('user', true)->isEmail()
    ->select('-a,--address', true)->isOptional()->hasMaxCharacters(255)->isPrintable()
    ->select('-b,--birthday', true)->isOptional()->isDate()
    ->select('-c,--comments', true)->isOptional()->isDescription()
    ->select('-d,--description', true)->isOptional()->isDescription()
    ->select('-e,--email', true)->isOptional()->isEmail()
    ->select('-g,--gender', true)->isOptional()->isGender()
    ->select('-l,--language', true)->isOptional()->isName()
    ->select('-n,--name', true)->isOptional()->isName()
    ->select('-p,--phones', true)->isOptional()->isPhones()
    ->select('-t,--title', true)->isOptional()->isName()
    ->select('-u,--username', true)->isOptional()->isDescription()->isName()
    ->select('--url', true)->isOptional()->isUrl()
    ->select('--first-names')->isOptional()->isName()
    ->select('--last-names')->isOptional()->isName()
    ->select('--domain', true)->isOptional()->isDomain()
    ->select('--is-leader')->isOptional(false)->isBoolean()
    ->select('--lead-by', true)->isOptional()->isEmail()
    ->select('--timezone', true)->isOptional()->isTimezone()
    ->select('--country', true)->isOptional()->isName()
    ->select('--state', true)->isOptional()->isName()
    ->select('--city', true)->isOptional()->isName()
    ->select('--company', true)->isOptional()->isName()
    ->select('--department', true)->isOptional()->isName()
    ->select('--branch', true)->isOptional()->isName()
    ->select('-r,--roles,--role', true)->isOptional()->sanitizeForceArray()->each()->isName()
    ->noArgumentsLeft()
    ->validate();



// Ensure that specified roles exist
if ($argv['roles']) {
    foreach ($argv['roles'] as &$role) {
        $role = Role::get($role);
    }

    unset($role);
}



// Modify user and save
$user = User::get($argv['user']);

User::exists($argv['name'], $user['id'], true);

$user->modfiy($argv)->save();



// Set users roles
$user->roles()->set($argv['roles']);



// Done!
Log::success(tr('Modified user ":user"', [':user' => $user->getDisplayName()]));