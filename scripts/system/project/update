#!/usr/bin/php
<?php

use Phoundation\Cli\Documentation;
use Phoundation\Core\Log\Log;
use Phoundation\Data\Validator\ArgvValidator;
use Phoundation\Developer\Project\Project;



/**
 * Script system/accounts/users/authenticate
 *
 * This script can be used to test the authentication for the specified user
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */

Documentation::usage('./cli system project update [OPTIONS]
./cli system project update -b BRANCH
./cli system project update -b  BRANCH --check
./cli system project update -l --branch BRANCH  
');

Documentation::help('This script will update your Phoundation libraries and list



ARGUMENTS



-b / --branch                           The branch from which to update

[-c / --check]                          If specified will only check for available updates

[-l / --local]                          If specified update from a local Phoundation core repository

[-m / --message]                        The git commit message for this update. If not specified, a default will be used  

[-p / --phoundation]                    If specified should contain the path to your local Phoundation installation

[-s / --signed]                         If specified will make a signed commit. This requires your git setup to be 
                                        configured correctly for this');



// Get command line arguments
$argv = ArgvValidator::new()
    ->select('-b,--branch', true)->isPrintable()
    ->select('-c,--check')->isOptional()->isBoolean()
    ->select('-l,--local')->isOptional()->isBoolean()
    ->select('-m,--message', true)->isOptional()->isPrintable()->hasMinCharacters(10)->hasMaxCharacters(1024)
    ->select('-p,--phoundation', true)->isOptional()->isPrintable()
    ->select('-s,--signed')->isOptional()->isBoolean()
    ->noArgumentsLeft()
    ->validate();



if ($argv['local']) {
    Log::information(tr('Pulling updates from local Phoundation installation...'));
    Project::new()->updateLocal($argv['branch'], $argv['message'], $argv['signed'], $argv['phoundation']);
} elseif ($argv['check']) {
    Log::information(tr('Checking for Phoundation updates...'));
    Project::checkUpdates();
} else {
    Log::information(tr('Updating Phoundation...'));
    Project::update();
}