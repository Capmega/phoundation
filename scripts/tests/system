#!/usr/bin/php
<?php
/*
 * This script tests system functions
 */
require_once(dirname(__FILE__).'/../../libs/startup.php');
cli_only();
load_libs('test');

// isset_get() tests
test('isset_get()', 'Function call should not create variable if it does not exist', function() {
    $t = isset_get($_GET['sdlkfjklsdjfkjshdfkjhs']);

    if (isset($_GET['sdlkfjklsdjfkjshdfkjhs'])) {
        throw new CoreException('Non existing variable did exist after isset_get() check on that function');
    }
});

test('isset_get()', 'Function call with existing variable should return value of that variable', function() {
    $t = array('returnthis' => 1);

    if (isset_get($t['returnthis']) != 1) {
        throw new CoreException('Returned incorrect value for requested key');
    }
});

test('isset_get()', 'Function call should return alternative value if the specified variable does not exist', function() {
    $t = array('returnthis' => 1);

    if (isset_get($t['returnsomethingelse'], 2) != 2) {
        throw new CoreException('Returned incorrect alternative value');
    }
});

// safe_exec() tests
test('safe_exec()', 'Function call should return this file name', function() {
    if (substr(safe_exec('ls '.ROOT.'scripts/tests/system')[0], -20, 20) != 'scripts/tests/system') {
        throw new CoreException('Did not return filename "system"');
    }
});

test('safe_exec()', 'Function call which causes error exit code should cause exception', function() {
    try{
        safe_exec('lkjerlkfwejf');
        throw new CoreException('No exception thrown', 'notok');

    }catch(Exception $e) {
        if ($e->getCode() === 'notok') {
            throw new CoreException('Did NOT throw exception on error exit code which has not been defined as OK', $e);
        }
    }
});

test('safe_exec()', 'Function call which causes error exit code should NOT cause exception', function() {
    safe_exec('lkjerlkfwejf', 127);
});

test('load_content()', 'Function call should create content file in correct location', function() {
    load_content('html/test', array('###TEST###'), array("TEST"));

    $file = ROOT.'data/content/en/html/test.html';

    if (!file_exists($file)) {
        throw new CoreException('Did not create file in correct location');
    }

    if (file_get_contents($file) != "File created html/test by ".realpath(PWD.$_SERVER['PHP_SELF'])."\nArray\n(\n    [0] => ###TEST###\n)\nArray\n(\n    [0] => TEST\n)\n") {
        throw new CoreException('Did not create correct file contents');
    }
});

test('load_content()', 'Function call should detect missing markers', function() {
    try{
        load_content('html/test', array('###BBBB###'), array("TEST"), null, null, true);

    }catch(Exception $e) {
        if ($e->getCode() !== 'missing-markers') {
            throw $e;
        }

        /*
         * W00T, correct!
         */
        file_clear_path(ROOT.'data/content/en/html/test.html', ROOT.'data/content');
    }
});
?>
