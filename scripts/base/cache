#!/usr/bin/php
<?php
/*
 * This script can be used to access various cache functions
 */
$usage = "./scripts/base/cache clear [key KEY] [namespace NAMESPACE]\n".
         "./scripts/base/cache size\n".
         "./scripts/base/cache files\n".
         "./scripts/base/cache info\n";
         "./scripts/base/cache find (SOON!)\n";

$help  = "The deploy script can deploy the project to target environments, like trial, production, etc.
This is the project deploy script

METHODS

clear                       - Clear the complete cache

clear [key KEY]             - Clear the specified key from the cache

clear [namespace NAMESPACE] - Clear the specified namespace from the cache

size                        - Returns the total size of cache in use

count                       - Returns the total amount of objects cache

files                       - Alias for count

info                        - Return both size and count information
";

require_once(dirname(__FILE__).'/../../libs/startup.php');

switch(cli_method()){
    case 'clear':
        /*
         * Clear the cache
         */
        $key       = cli_argument('--key');
        $namespace = cli_argument('--namespace');
        cli_no_arguments_left();

        cache_clear($key, $namespace);
        cli_log('Cleared cache', 'green');
        break;

    case 'size':
        cli_no_arguments_left();

        $size = cache_size();
        cli_log(tr('The cache is ":size" large', array(':size' => bytes($size))), 'white');
        break;

    case 'count':
        // FALLTHROUGH
    case 'files':
        cli_no_arguments_left();

        $count = cache_count();
        cli_log(tr('The cache contains ":count" objects', array(':count' => $count)), 'white');
        break;

    case 'info':
        cli_no_arguments_left();

        $size   = cache_size();
        $count  = cache_count();
        $method = $_CONFIG['cache']['method'];

        cli_log(tr('The cache contains ":count" objects, and is ":size" large', array(':count' => $count, ':size' => bytes($size))), '', 'white');

        switch($method){
            case 'file':
                cli_log(tr('The cache is using the filesystem for storage')                   , 'white');
                cli_log(tr('The cache directory is ":ROOTdata/cache"', array(':ROOT' => ROOT)), 'white');
                break;

            case 'memcached':
                cli_log(tr('The cache is using memcached for storage'), '', 'white');
                break;

            default:
                throw new bException(tr('Unknown cache method ":method" configured in $_CONFIG[cache][method]'. array(':method' => $_CONFIG['cache']['method'])), 'unknown');
        }

        break;

    case 'find':
// :TODO: Implement
        break;

    default:
        throw new bException(tr('Unknown argument ":method" specified', array(':method' => cli_method())), 'unknown');
}
?>
