#!/usr/bin/php
<?php
/*
 *
 */
$usage = './scripts/base/csf install
./scripts/base/csf start
./scripts/base/csf restart
./scripts/base/csf stop
./scripts/base/csf update-ports
./scripts/base/csf allow-ip
./scripts/base/csf deny-ip
./scripts/base/csf set-rule
./scripts/base/csf set-testing-mode
./scripts/base/csf set-restrict-syslog

';

$help  = 'This script configures csf


METHODS


install HOSTNAME                            -install csf

start   HOSTNAME                           -starts csf service

restart HOSTNAME                           -restart csf service

stop    HOSTNAME                           -stops csf service

update-ports HOSTNAME PROTOCOL RULE_TYPE PORTS
                                           -set ports for a specific protocol

allow-ip HOSTNAME IP                       -allows access for an ip

deny-ip HOSTNAME IP                        -denies access for an ip

add-rule HOSTNAME RULE_TYPE PROTOCOL CONNECTION_TYPE PORT IP COMMENTS
                                           -sets new rule for a specific port and ip

remove-rule HOSTNAME RULE_TYPE PROTOCOL CONNECTION_TYPE PORT IP COMMENTS
                                           -sets new rule for a specific port and ip

set-testing-mode HOSTNAME VALUE            -sets value for testing mode

set-restrict-syslog HOSTNAME VALUE         -sets value for restric syslog type



';

require_once(__DIR__.'/../../libs/startup.php');
cli_only();
load_libs('csf');

$local = true;

switch(cli_method()){
    case 'install':
        $hostname = cli_argument(1);
        csf_install($hostname);

        break;

    case 'start':
        $hostname = cli_argument(1);
        csf_start($hostname);

        break;

    case 'restart':
        $hostname = cli_argument(1);
        csf_restart($hostname);

        break;

    case 'stop':
        $hostname = cli_argument(1);
        csf_stop($hostname);

        break;

    case 'update-ports':
        $hostname  = cli_argument(1);
        $protocol  = cli_argument(2);
        $rule_type = cli_argument(3);
        $ports     = cli_argument(4);

        cli_no_arguments_left();
        csf_set_ports($hostname, $protocol, $rule_type, $ports);

        break;

    case 'allow-ip':
        $hostname = cli_argument(1);
        $ip       = cli_argument(2);

        cli_no_arguments_left();
        csf_allow_ip($hostname, $ip);

        break;

    case 'deny-ip':
        $hostname = cli_argument(1);
        $ip       = cli_argument(2);

        cli_no_arguments_left();
        csf_deny_ip($hostname, $ip);

        break;

    case 'add-rule':
        $hostname        = cli_argument(1);
        $rule_type       = cli_argument(2);
        $protocol        = cli_argument(3);
        $connection_type = cli_argument(4);
        $port            = cli_argument(5);
        $ip              = cli_argument(6);
        $comments        = cli_argument(7);

        cli_no_arguments_left();

        switch($rule_type){
            case 'allow':
                $result = csf_allow_rule($hostname, $protocol, $connection_type, $port, $ip, $comments);
                break;

            case 'deny':
                $result =  csf_deny_rule($hostname, $protocol, $connection_type, $port, $ip, $comments);
                break;

            case '';
                throw new bException(tr('No rule type specified'), 'not-specified');

            default:
                throw new bException(tr('Unknown rule type ":ruletype"', array(':ruletype' => $rule_type)), 'unknown');

        }
        break;

    case 'remove-rule':
        $hostname        = cli_argument(1);
        $rule_type       = cli_argument(2);
        $protocol        = cli_argument(3);
        $connection_type = cli_argument(4);
        $port            = cli_argument(5);
        $ip              = cli_argument(6);
        $comments        = cli_argument(7);

        cli_no_arguments_left();

        switch($rule_type){
            case 'allow':
                $result = csf_remove_allow_rule($hostname, $protocol, $connection_type, $port, $ip);
                break;

            case 'deny':
                $result = csf_remove_deny_rule($hostname, $protocol, $connection_type, $port, $ip);
                break;

            case '';
                throw new bException(tr('No rule type specified'), 'not-specified');

            default:
                throw new bException(tr('Unknown rule type ":ruletype"', array(':ruletype' => $rule_type)), 'unknown');

        }

        break;

    case 'set-testing-mode':
        $hostname = cli_argument(1);
        $value    = cli_argument(2);

        cli_no_arguments_left();
        csf_set_testing($hostname, $value);

        break;

    case 'set-restrict-syslog':
        $hostname = cli_argument(1);
        $value    = cli_argument(2);

        cli_no_arguments_left();
        csf_set_restrict_syslog($hostname, $value);

        break;

    case '':
        throw new bException(tr('No method specified'), 'no-method');

    default:
        throw new bException(tr('Unknown method ":method"', array(':method' => cli_method())), 'unknown-method');
}
?>