#!/usr/bin/php
<?php
/*
 * This script is a front end to PHP composer
 */
$usage = "./scripts/base/composer OPTIONS\n".
         "./scripts/base/composer version\n";
         "./scripts/base/composer init\n";
         "./scripts/base/composer install\n";

$help  = "This is the help contents";

require_once(__DIR__.'/../../libs/startup.php');

load_libs('composer');

$composer = ROOT.'www/en/libs/external/composer.phar';

if(!file_exists($composer)){
    throw new bException(tr('composer.phar should be installed but was not found'), 'not-found');
}

switch(cli_method()){
    case 'init':
        /*
         * Setup a composer JSON data file
         */
        if(file_exists(ROOT.'composer.json')){
            if(!FORCE){
                throw new bException('Composer has already been initialized for this project', 'already-initialized');
            }
        }

        composer_init_file();
        break;

    case 'version':
        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', array($composer, '-V'))));
        break;

    case 'install':
        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', array($composer, 'install'))));
        break;

    case 'require':
        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', array($composer, 'require'))));
        break;

    case 'explain':
        $arguments = array($composer, 'help');
        $arguments = array_merge($arguments, cli_arguments());

        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', $arguments)));
        break;

    case 'list':
        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', array($composer, 'list'))));
        break;

    case 'search':
        $query = cli_arguments();

        if(!$query){
            throw new bException(tr('No query specified'), 'not-specified');
        }

        $arguments = array($composer, 'search');
        $arguments = array_merge($arguments, $query);

        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', $arguments)));
        break;

    case 'show':
        $query = cli_arguments();

        if(!$query){
            throw new bException(tr('No query specified'), 'not-specified');
        }

        $arguments   = array($composer, 'show');
        $arguments   = array_merge($arguments, $query);
        $arguments[] = '--all';

        safe_exec(array('function' => 'passthru',
                        'commands' => array('cd' , array(ROOT),
                                            'php', $arguments)));
        break;

    case '':
        throw new bException(tr('No method specified, please specify one of "init"'), 'no-method');

    default:
        throw new bException(tr('Unknown method ":method" specified, please specify one of "init"', array(':method' => cli_method())), 'unknown');
}
?>
