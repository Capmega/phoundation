#!/usr/bin/php
<?php
/*
 * This script assists in merging
 */
$usage = "./scripts/base/merge-assist BRANCH \n".
         "./scripts/base/merge-assist BRANCH [BRANCH BRANCH ...] [target BRANCH]\n";

$help  = "The merge-assist script will help you prepare for a merge to the target branch

OPTIONS

--do-merge                     - ";

//$quiet = false;

require_once(dirname(__FILE__).'/../../libs/startup.php');
load_libs('git');



/*
 * Get options
 */
$do_merge = cli_argument('--do-merge');



/*
 * Can only work on clean WT
 */
if(git_has_changes()){
    if(!FORCE){
        throw new bException(tr('merge-prepare: GIT changes detected, cannot continue. Either git commit your changes, or use -f or --force to force merge prepare.'), 'git-changes');
    }

    cli_log(tr('WARNING: GIT Changes detected, continuing because of -f option'), 'yellow');
}


/*
 * Detect the current branch
 */
foreach(safe_exec('git branch') as $branch){
    if(substr(trim($branch), 0, 1) == '*'){
        $current = trim(str_from($branch, '*'));
        break;
    }
}


/*
 * Detect target branch, either current, or specified on command line
 */
if(!$target = not_null(cli_argument('--target', true), cli_argument('-t', true))){
    $target = $current;
}



/*
 * Ensure that all requested branches exist
 */
cli_log(tr('Verifying requested branches ":branches"', array(':branches' => implode(' ', $argv))));
git_fetch();

foreach(safe_exec('git branch -a') as $branch){
    $branches[] = trim(str_from($branch, '*'));
}

foreach($argv as $branch){
    if(!in_array($branch, $branches)){
        if(!in_array('remotes/origin/'.$branch, $branches)){
            $fail[] = $branch;
        }
    }
}

if(!empty($fail)){
    throw new bException(tr('merge-prepare: Specified branche(s) ":fail" do not exist', array(':fail' => implode(' ', $fail))), 'not_exists');
}

if(empty($argv)){
    throw new bException(tr('merge-prepare: No source branches specified'), 'not-specified');
}

cli_log(tr('Requested branches verified'));


/*
 * Ensure that target branch exists
 */
cli_log(tr('Preparing merging to target branch ":target"', array(':target' => $target)), 'white');

if(!in_array($target, $branches)){
    throw new bException(tr('merge-prepare: Specified target branch ":target" do not exist', array(':target' => $target)), 'not_exists');
}

$branches = $argv;


/*
 * Ensure that the target branch is updated
 */
safe_exec('git co '.$target);
script_exec('base/update', 'local');


/*
 * Now update each requested branch from BASE (To ensure there won't be any
 * merge errors later on), then merge it from TARGET to current branch so that
 * the only differences between the requested branches and the TARGET branch
 * are the changes made in that branch
 */
foreach($branches as $branch){
    cli_log(tr('Processing branch ":branch"', array(':branch' => $branch)));
    safe_exec('git co '.$branch);
    safe_exec('git pull origin '.$branch);

    cli_log(tr('Updating from base'));
    script_exec('base/update', '-l --no-init');

    cli_log(tr('Merging from ":branch"', array(':branch' => $branch)));
    safe_exec('git merge '.$target);
}


/*
 * Return to the current branch
 */
safe_exec('git co '.$current);
cli_log(tr('Returned to original branch ":branch"', array(':branch' => $current)));
cli_log('Done...', 'green');
?>
