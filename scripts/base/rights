#!/usr/bin/php
<?php
/*
 * This script manages the available rights
 */
$usage = "./scripts/base/rights list\n".
         "./scripts/base/rights create name NAME description DESCRIPTION\n".
         "./scripts/base/rights modify ID|NAME name NAME description DESCRIPTION\n".
         "./scripts/base/rights delete|undelete|erase ID|RIGHT ID|RIGHT ...\n".
         "./scripts/base/rights for USER\n";

$help  = "This is the rights management script";

$quiet = true;
require_once(dirname(__FILE__).'/../../../libs/startup.php');

try{
    cli_rights('admin,users,rights');
    load_libs('user,rights');

    switch(argument(0)){
        case 'list':
            log_console('Showing currently available rights', '');

            $limit   = 200;

            $r       = sql_query('SELECT    `name`,
                                            `status`,
                                            `description`

                                  FROM      `rights`'.($limit ? ' LIMIT '.$limit : ''));

            log_console(str_size('Name', 20).' '.str_size('Status', 16).' Description', '', 'white');

            while($right = sql_fetch($r)){
                log_console(str_size($right['name'], 20).' '.str_size(status($right['status']), 16).' '.$right['description'], '');
            }

            break;

        case 'for':
            if(!argument(1)){
                throw new bException(tr('No user specified'), 'notspecified');
            }

            $user = sql_get('SELECT `id`, `name`, `username`, `email` FROM `users` WHERE `id` = :user OR `name` = :user', array(':user' => argument(1)));

            if(!$user){
                throw new bException(tr('Specified user "%user%" does not exist', array('%user%' => argument(1))), 'notexist');
            }

            log_console('Showing rights for user "'.user_name($user).'"', '', 'white');

            $list = sql_list('SELECT    `rights`.`name`,
                                        `rights`.`description`

                              FROM      `users_rights`

                              LEFT JOIN `rights`
                              ON        `rights`.`id`             = `users_rights`.`rights_id`

                              WHERE     `users_rights`.`users_id` = :users_id',

                              array(':users_id' => $user['id']));

            if(!$list){
                log_console('This user has no rights assigned', '', 'yellow');

            }else{
                log_console(str_size('Name', 16).'Description', '', 'white');

                foreach($list as $name => $description){
                    log_console(str_size($name, 16).$description, '');
                }
            }

            break;

        case 'create':
            try{
                $right = rights_validate(arguments('name,description'));

                sql_query('INSERT INTO `rights` (`createdby`, `name`, `description`)
                           VALUES               (:createdby , :name , :description)',

                           array(':createdby'   => isset_get($_SESSION['user']['id']),
                                 ':name'        => $right['name'],
                                 ':description' => $right['description']));

                log_console(tr('Created new right "%right%"', array('%right%' => str_log($right['name']))), '', 'green');
                break;

            }catch(Exception $e){
                throw new bException('Failed to create new right', $e);
            }

            break;

        case 'modify':
            try{
                if(!argument(1)){
                    throw new bException(tr('No right specified'), 'notspecified');
                }

                $old_right = sql_get('SELECT `id`, `name`, `description` FROM `rights` WHERE `id` = :right OR `name` = :right', array(':right' => argument(1)));

                if(!$old_right){
                    throw new bException(tr('Specified right "%right%" does not exist', array('%right%' => argument(1))), 'notspecified');
                }

                $right = rights_validate(arguments('name,description'), $old_right);

                sql_query('UPDATE `rights`

                           SET    `modifiedon`  = NOW(),
                                  `modifiedby`  = :modifiedby,
                                  `name`        = :name,
                                  `description` = :description

                           WHERE  `id`          = :id',

                           array(':modifiedby'  => isset_get($_SESSION['user']['id']),
                                 ':name'        => $right['name'],
                                 ':description' => $right['description'],
                                 ':id'          => $old_right['id']));

                /*
                 * Now also update the cached right names
                 */
                sql_query('UPDATE `users_rights`

                           SET    `name` = :name

                           WHERE  `id`   = :id',

                           array(':id'   => $old_right['id'],
                                 ':name' => $right['name']));

                log_console(tr('Modified right "%right%"', array('%right%' => str_log($right['name']))), '', 'green');
                break;

            }catch(Exception $e){
                throw new bException('Failed to modify right', $e);
            }

            break;

        case 'delete':
            cli_rights('modify');
            array_shift($argv);

            if(empty($argv)){
                throw new bException(tr('No rights specified'), 'notspecified');
            }

            $in = sql_in($argv);
            $r  = sql_query(debug_sql('UPDATE `rights` SET `status` = "deleted" WHERE `name` IN ('.implode(',', array_keys($in)).') or `id` IN ('.implode(',', array_keys($in)).')', $in));

            if(!$r->rowCount()){
                throw new bException(tr('Not deleted any rights'), 'notfound');
            }

            log_console(tr('Deleted "%count%" rights', array('%count%' => $r->rowCount())), '', 'green');
            break;

        case 'undelete':
            cli_rights('modify');
            array_shift($argv);

            if(empty($argv)){
                throw new bException(tr('No rights specified'), 'notspecified');
            }

            $in = sql_in($argv);
            $r  = sql_query(debug_sql('UPDATE `rights` SET `status` = NULL WHERE `name` IN ('.implode(',', array_keys($in)).') or `id` IN ('.implode(',', array_keys($in)).')', $in));

            if(!$r->rowCount()){
                throw new bException(tr('Not undeleted any rights'), 'notfound');
            }

            log_console(tr('Undeleted "%count%" rights', array('%count%' => $r->rowCount())), '', 'green');
            break;

        case 'erase':
            cli_rights('modify');
            array_shift($argv);

            if(empty($argv)){
                throw new bException(tr('No rights specified'), 'notspecified');
            }

            $in = sql_in($argv);
            $r  = sql_query(debug_sql('DELETE FROM `rights` WHERE (`name` IN ('.implode(',', array_keys($in)).') or `id` IN ('.implode(',', array_keys($in)).')) AND `status` = "deleted"', $in));

            if(!$r->rowCount()){
                throw new bException(tr('Not erased any rights'), 'notfound');
            }

            log_console(tr('Erased "%count%" rights', array('%count%' => $r->rowCount())), '', 'green');
            break;

        case '':
            throw new bException('base/users/rights: No option specified. Please specify one of "list, for/has, add/set/give, unset/take, create, delete/remove/erase"', 'notspecified');

        default:
            throw new bException('base/users/rights: Invalid option "'.str_log(argument(0)).'" specified', 'unknown');
    }

}catch(Exception $e){
    throw new bException('base/users/rights: Failed', $e);
}
?>
