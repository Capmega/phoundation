#!/usr/bin/php
<?php
/*
 * This script creates sitemap files for all languages
 *
 * Idea taken from http://yoast.com/xml-sitemap-php-script/
 * Written by Sven Oostenbrink
 *
 * Copyright (C), 2011 - 2012 - Sven Oostenbrink, so.oostenbrink@gmail.com
 *
 * Sitemap scanner should honor robots.txt and meta robots noindex!
 * Sitemap scanner should extract descriptions from pages
 */
$usage = "sitemap clear\n".
         "sitemap generate\n";

$help  = "This sitemap script can create new sitemap files";

require_once(__DIR__.'/../../libs/startup.php');

cli_only(true);
load_libs('sitemap');

if(empty($_CONFIG['sitemap']['enabled'])){
    log_console(tr('Sitemap has been disabled in the configuration'), 'yellow');
    cli_die(0);
}

switch(cli_method()){
    case 'clear':
        /*
         * Clear sitemap database.
         */
        if(cli_method(1)){
            log_console(tr('Clearing sitemap data for group ":group"', array(':group' => cli_method(1))), 'white');

        }else{
            log_console(tr('Clearing sitemap data'), 'white');
        }

        cli_no_arguments_left();
        sitemap_clear(cli_method(1));

        log_console(tr('Sitemap data has been cleared'), 'green');

        break;

    case 'update':
        $generated = sql_get('SELECT COUNT(*) AS `count` FROM `sitemaps_generated`', 'count');

        if(!$generated){
            log_console(tr('No sitemap data has been generated ever before. Generating all sitemap files now'), 'yellow');

        }else{
            if($_CONFIG['language']['supported']){
                $languages = $_CONFIG['language']['supported'];

            }else{
                $languages = array(LANGUAGE => LANGUAGE);
            }

            foreach($languages as $language_code => $language_name){
                /*
                 * Check if there are updates for each language
                 */
                $modified = sql_get('SELECT COUNT(`sitemaps_data`.`id`) AS `count`

                                     FROM   `sitemaps_generated`

                                     JOIN   `sitemaps_data`

                                     ON   ((`sitemaps_data`.`language` = `sitemaps_generated`.`language`) OR (`sitemaps_data`.`language` IS NULL))

                                     WHERE  `sitemaps_generated`.`language` = :language
                                     AND (((`sitemaps_data`.`modifiedon` IS     NULL) AND (`sitemaps_data`.`createdon`  > `sitemaps_generated`.`createdon`))
                                     OR   ((`sitemaps_data`.`modifiedon` IS NOT NULL) AND (`sitemaps_data`.`modifiedon` > `sitemaps_generated`.`createdon`)))',

                                     true, array(':language' => $language_code));

                if($modified){
                    log_console(tr('Sitemap data for language ":language" has been modified, regenerating all sitemap files', array(':language' => $language_name)), 'green');

                }else{
                    if(file_exists(ROOT.'www/en/sitemap.xml')){
                        log_console(tr('Sitemap files for language ":language" exists and sitemap data has not been modified, not regenerating sitemap files', array(':language' => $language_name)), 'green');
                        continue;
                    }

                    log_console(tr('Sitemap data for language ":language" has not been modified, but sitemap file was not found. Regenerating all sitemap files', array(':language' => $language_name)), 'yellow');
                }

                sitemap_generate($language_code);
            }

            break;
        }

        // FALLTHROUGH
    case 'generate':
        cli_no_arguments_left();
        log_console(tr('Regenerating sitemap files'), 'white');
        sitemap_generate();
        break;

    case '':
        throw new bException(tr('No argument specified'), 'unknown');

    default:
        throw new bException(tr('Unknown argument ":method" specified', array(':method' => cli_method())), 'unknown');
}
?>
