diff --git a/www/en/libs/html.php b/www/en/libs/html.php
index 55b4e29..8bddf41 100644
--- a/www/en/libs/html.php
+++ b/www/en/libs/html.php
@@ -166,7 +166,10 @@ function html_bundler($type){
              * JS
              */
             if(!filesize($bundle_file)){
-                file_delete($bundle_file, false, false, false);
+                file_execute_mode(dirname($bundle_file), 0770, function(){
+                    file_delete($bundle_file, false, false, false, ROOT.'pub/'.$typs);
+                });
+
                 return html_bundler($type);
             }

@@ -175,7 +178,10 @@ function html_bundler($type){
              * not too old
              */
             if((filemtime($bundle_file) + $_CONFIG['cdn']['bundler']['max_age']) < time()){
-                file_delete($bundle_file, false, false, false);
+                file_execute_mode(dirname($bundle_file), 0770, function(){
+                    file_delete($bundle_file, false, false, false, ROOT.'pub/'.$typs);
+                });
+
                 return html_bundler($type);
             }

@@ -185,151 +191,153 @@ function html_bundler($type){
             /*
              * Generate new bundle
              */
-            foreach($core->register[$type] as $file => $data){
-                /*
-                 * Check for @imports
-                 */
-                $count++;
-                $orgfile = $file;
-                $file    = $path.$file.$ext;
-
-                if(VERYVERBOSE){
-                    log_file(tr('Adding file ":file" to bundle file ":bundle"', array(':file' => $file, ':bundle' => $bundle_file)), 'bundler', 'cyan');
-                }
-
-                if(!file_exists($file)){
-                    notify(array('code'    => 'not-exists',
-                                 'groups'  => 'developers',
-                                 'title'   => tr('Bundler file does not exist'),
-                                 'message' => tr('html_bundler(): The bundler ":extension" file ":file" does not exist', array(':extension' => $extension, ':file' => $file))));
-                    continue;
-                }
-
-                $data = file_get_contents($file);
-                unset($core->register[$type][$orgfile]);
-
-                switch($extension){
-                    case 'js':
-                        /*
-                         * Prevent issues with JS files that do not end in ; or
-                         * that end in an // comment
-                         */
-//                        $data .= "\n;";
-                        break;
+            file_execute_mode(dirname($bundle_file), 0770, function(){
+                foreach($core->register[$type] as $file => $data){
+                    /*
+                     * Check for @imports
+                     */
+                    $count++;
+                    $orgfile = $file;
+                    $file    = $path.$file.$ext;

-                    case 'css':
-// :TODO: ADD SUPPORT FOR RECURSIVE @IMPORT STATEMENTS!! What if the files that are imported with @import contain @import statements themselves!?!?!?
-                        if(preg_match_all('/@import.+?;/', $data, $matches)){
-                            foreach($matches[0] as $match){
-                                /*
-                                 * Inline replace each @import with the file
-                                 * contents
-                                 */
-//                                if(preg_match('/@import\s?(?:url\()?((?:"?.+?"?)|(?:\'.+?\'))\)?/', $match)){
-                                if(preg_match('/@import\s"|\'.+?"|\'/', $match)){
-// :TODO: What if specified URLs are absolute? WHat if start with either / or http(s):// ????
-                                    $import = str_cut($match, '"', '"');
+                    if(VERYVERBOSE){
+                        log_file(tr('Adding file ":file" to bundle file ":bundle"', array(':file' => $file, ':bundle' => $bundle_file)), 'bundler', 'cyan');
+                    }

-                                    if(!file_exists($path.$import)){
-                                        notify(array('code'    => 'not-exists',
-                                                     'groups'  => 'developers',
-                                                     'title'   => tr('Bundler file does not exist'),
-                                                     'message' => tr('html_bundler(): The bundler ":extension" file ":import" @imported by file ":file" does not exist', array(':extension' => $extension, ':import' => $import, ':file' => $file))));
+                    if(!file_exists($file)){
+                        notify(array('code'    => 'not-exists',
+                                     'groups'  => 'developers',
+                                     'title'   => tr('Bundler file does not exist'),
+                                     'message' => tr('html_bundler(): The bundler ":extension" file ":file" does not exist', array(':extension' => $extension, ':file' => $file))));
+                        continue;
+                    }

-                                        $import = '';
+                    $data = file_get_contents($file);
+                    unset($core->register[$type][$orgfile]);

-                                    }else{
-                                        $import = file_get_contents($path.$import);
-                                    }
+                    switch($extension){
+                        case 'js':
+                            /*
+                             * Prevent issues with JS files that do not end in ; or
+                             * that end in an // comment
+                             */
+    //                        $data .= "\n;";
+                            break;

-                                }elseif(preg_match('/@import\surl\(.+?\)/', $match)){
-// :TODO: What if specified URLs are absolute? WHat if start with either / or http(s):// ????
+                        case 'css':
+    // :TODO: ADD SUPPORT FOR RECURSIVE @IMPORT STATEMENTS!! What if the files that are imported with @import contain @import statements themselves!?!?!?
+                            if(preg_match_all('/@import.+?;/', $data, $matches)){
+                                foreach($matches[0] as $match){
                                     /*
-                                     * This is an external URL. Get it locally
-                                     * as a temp file, then include
+                                     * Inline replace each @import with the file
+                                     * contents
                                      */
-                                    $import = str_cut($match, '(', ')');
-                                    $import = slash(dirname($file)).unslash($import);
-
-                                    if(!file_exists($import)){
-                                        notify(array('code'    => 'not-exists',
-                                                     'groups'  => 'developers',
-                                                     'title'   => tr('Bundler file does not exist'),
-                                                     'message' => tr('html_bundler(): The bundler ":extension" file ":import" @imported by file ":file" does not exist', array(':extension' => $extension, ':import' => $import, ':file' => $file))));
-
-                                        $import = '';
-
-                                    }else{
-                                        $import = file_get_contents($import);
+    //                                if(preg_match('/@import\s?(?:url\()?((?:"?.+?"?)|(?:\'.+?\'))\)?/', $match)){
+                                    if(preg_match('/@import\s"|\'.+?"|\'/', $match)){
+    // :TODO: What if specified URLs are absolute? WHat if start with either / or http(s):// ????
+                                        $import = str_cut($match, '"', '"');
+
+                                        if(!file_exists($path.$import)){
+                                            notify(array('code'    => 'not-exists',
+                                                         'groups'  => 'developers',
+                                                         'title'   => tr('Bundler file does not exist'),
+                                                         'message' => tr('html_bundler(): The bundler ":extension" file ":import" @imported by file ":file" does not exist', array(':extension' => $extension, ':import' => $import, ':file' => $file))));
+
+                                            $import = '';
+
+                                        }else{
+                                            $import = file_get_contents($path.$import);
+                                        }
+
+                                    }elseif(preg_match('/@import\surl\(.+?\)/', $match)){
+    // :TODO: What if specified URLs are absolute? WHat if start with either / or http(s):// ????
+                                        /*
+                                         * This is an external URL. Get it locally
+                                         * as a temp file, then include
+                                         */
+                                        $import = str_cut($match, '(', ')');
+                                        $import = slash(dirname($file)).unslash($import);
+
+                                        if(!file_exists($import)){
+                                            notify(array('code'    => 'not-exists',
+                                                         'groups'  => 'developers',
+                                                         'title'   => tr('Bundler file does not exist'),
+                                                         'message' => tr('html_bundler(): The bundler ":extension" file ":import" @imported by file ":file" does not exist', array(':extension' => $extension, ':import' => $import, ':file' => $file))));
+
+                                            $import = '';
+
+                                        }else{
+                                            $import = file_get_contents($import);
+                                        }
                                     }
-                                }

-                                $data = str_replace($match, $import, $data);
+                                    $data = str_replace($match, $import, $data);
+                                }
                             }
-                        }

-                        $count = substr_count($orgfile, '/');
+                            $count = substr_count($orgfile, '/');

-                        if(!$count){
-                            /*
-                             * No URL rewriting required, this file is directly
-                             * in /css or /js, and not in a sub dir
-                             */
-                            continue;
-                        }
+                            if(!$count){
+                                /*
+                                 * No URL rewriting required, this file is directly
+                                 * in /css or /js, and not in a sub dir
+                                 */
+                                continue;
+                            }

-                        if(preg_match_all('/url\((.+?)\)/', $data, $matches)){
-                            /*
-                             * Rewrite all URL's to avoid relative URL's failing
-                             * for files in sub directories
-                             *
-                             * e.g.:
-                             *
-                             * The bundle file is /pub/css/bundle-1.css,
-                             * includes a css file /pub/css/foo/bar.css,
-                             * bar.css includes an image 1.jpg that is in the
-                             * same directory as bar.css with url("1.jpg")
-                             *
-                             * In the bundled file, this should become
-                             * url("foo/1.jpg")
-                             */
-                            foreach($matches[1] as $url){
-                                if(strtolower(substr($url, 0, 5)) == 'data:'){
-                                    /*
-                                     * This is inline data, nothing we can do so
-                                     * ignore
-                                     */
-                                    continue;
-                                }
+                            if(preg_match_all('/url\((.+?)\)/', $data, $matches)){
+                                /*
+                                 * Rewrite all URL's to avoid relative URL's failing
+                                 * for files in sub directories
+                                 *
+                                 * e.g.:
+                                 *
+                                 * The bundle file is /pub/css/bundle-1.css,
+                                 * includes a css file /pub/css/foo/bar.css,
+                                 * bar.css includes an image 1.jpg that is in the
+                                 * same directory as bar.css with url("1.jpg")
+                                 *
+                                 * In the bundled file, this should become
+                                 * url("foo/1.jpg")
+                                 */
+                                foreach($matches[1] as $url){
+                                    if(strtolower(substr($url, 0, 5)) == 'data:'){
+                                        /*
+                                         * This is inline data, nothing we can do so
+                                         * ignore
+                                         */
+                                        continue;
+                                    }

-                                if(substr($url, 0, 1) == '/'){
-                                    /*
-                                     * Absolute URL, we can ignore these since
-                                     * they already point towards the correct
-                                     * path
-                                     */
-                                }
+                                    if(substr($url, 0, 1) == '/'){
+                                        /*
+                                         * Absolute URL, we can ignore these since
+                                         * they already point towards the correct
+                                         * path
+                                         */
+                                    }

-                                if(preg_match('/https?:\/\//', $url)){
-                                    /*
-                                     * Absolute domain, ignore because we cannot
-                                     * fix anything here
-                                     */
-                                    continue;
-                                }
+                                    if(preg_match('/https?:\/\//', $url)){
+                                        /*
+                                         * Absolute domain, ignore because we cannot
+                                         * fix anything here
+                                         */
+                                        continue;
+                                    }

-                                $data = str_replace($url, '"'.str_repeat('../', $count).$url.'"', $data);
+                                    $data = str_replace($url, '"'.str_repeat('../', $count).$url.'"', $data);
+                                }
                             }
-                        }
-                }
+                    }

-                if(debug()){
-                    file_append($bundle_file, "\n/* *** BUNDLER FILE \"".$orgfile."\" *** */\n".$data.($_CONFIG['cdn']['min'] ? '' : "\n"));
+                    if(debug()){
+                        file_append($bundle_file, "\n/* *** BUNDLER FILE \"".$orgfile."\" *** */\n".$data.($_CONFIG['cdn']['min'] ? '' : "\n"));

-                }else{
-                    file_append($bundle_file, $data.($_CONFIG['cdn']['min'] ? '' : "\n"));
+                    }else{
+                        file_append($bundle_file, $data.($_CONFIG['cdn']['min'] ? '' : "\n"));
+                    }
                 }
-            }
+            });

             /*
              * Only continue here if we actually added anything to the bundle
