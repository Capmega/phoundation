#!/usr/bin/php
<?php

declare(strict_types=1);

use Phoundation\Accounts\Roles\Role;
use Phoundation\Cli\Documentation;
use Phoundation\Core\Log\Log;
use Phoundation\Data\Validator\ArgvValidator;


/**
 * Script accounts/roles/create
 *
 * This script will create a new role with the specified properties
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
Documentation::usage('./pho accounts roles create NAME [OPTIONS]
./pho system accounts roles create test -d "This is a test role!"');

Documentation::help('This script allows you to create roles



ARGUMENTS



NAME                                    The name for the role

[-d / --description]                    The description for the role');



// Validate arguments
$argv = ArgvValidator::new()
    ->select('name', true)->isName()
    ->select('-d,--description', true)->isOptional(null)->isDescription()
    ->select('-r,--rights,--right', true)->isOptional(null)->sanitizeForceArray()->each()->isName()
    ->validate();



// Check if the role already exists
Role::notExists('name', $argv['name'], null, true);



// Ensure that specified roles exist
if ($argv['rights']) {
    foreach ($argv['rights'] as &$right) {
        $right = Role::get($right);
    }

    unset($right);
}



// Create role and save it
$role = Role::new()->apply($argv)->save();



// Set the rights for this role
$role->getRights()->setRights($argv['rights']);



// Done!
Log::success(tr('Created new role ":role"', [':role' => $role->getName()]));
