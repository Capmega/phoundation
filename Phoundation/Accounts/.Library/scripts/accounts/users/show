#!/usr/bin/php
<?php

declare(strict_types=1);

use Phoundation\Accounts\Users\User;
use Phoundation\Cli\Documentation;
use Phoundation\Core\Config;
use Phoundation\Core\Log\Log;
use Phoundation\Data\DataEntry\Exception\DataEntryNotExistsException;
use Phoundation\Data\Validator\ArgvValidator;


/**
 * Script accounts/users/show
 *
 * This script displays information about the specified user.
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
Documentation::autoComplete(User::getAutoComplete([
    'positions' => [
        0 => [
            'word'   => 'SELECT `email` FROM `accounts_users` WHERE `email` LIKE :word AND `status` IS NULL',
            'noword' => 'SELECT `email` FROM `accounts_users` WHERE `status` IS NULL LIMIT ' . Config::getInteger('shell.autocomplete.limit', 50)
        ]
    ],
]));

Documentation::usage('./pho accounts users show USER');

Documentation::help(User::getHelpText('This script displays information about the specified user.  



ARGUMENTS



USER                                    The user to display information about. Specify either by user id or email 
                                        address'));


// Validate arguments
$argv = ArgvValidator::new()
    ->select('user')->hasMinCharacters(2)->hasMaxCharacters(255)
    ->validate();


// Display user data
User::get($argv['user'])->getCliForm();

Log::cli();
Log::information('Roles assigned to this user:');
Log::cli();

User::get($argv['user'])->getRoles()->CliDisplayTable();

Log::cli();
Log::information('Rights assigned to this user through its roles:');
Log::cli();

User::get($argv['user'])->getRights()->CliDisplayTable();
