#!/usr/bin/php
<?php

use Phoundation\Accounts\Users\User;
use Phoundation\Cli\CliDocumentation;
use Phoundation\Core\Log\Log;
use Phoundation\Data\Validator\ArgvValidator;
use Phoundation\Utils\Config;


/**
 * Script accounts/users/info
 *
 * This script displays information about the specified user.
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
CliDocumentation::autoComplete(User::getAutoComplete([
    'positions' => [
        0 => [
            'word'   => 'SELECT `email` FROM `accounts_users` WHERE `email` LIKE :word AND `status` IS NULL',
            'noword' => 'SELECT `email` FROM `accounts_users` WHERE `status` IS NULL LIMIT ' . Config::getInteger('shell.autocomplete.limit', 50)
        ]
    ],
]));

CliDocumentation::usage('./pho accounts users info USER');

CliDocumentation::help('This script displays information about the specified user  



ARGUMENTS



USER                                    The user to display information about. Specify either by user id or email 
                                        address');


// Validate arguments
$argv = ArgvValidator::new()
    ->select('user')->hasMinCharacters(2)->hasMaxCharacters(255)
    ->validate();


$user = User::get($argv['user']);

// Display user data
$user->getCliForm();

Log::information('Alternative email accounts for this user:');
$user->getEmails()->CliDisplayTable();

Log::information('Roles assigned to this user:');
$user->getRoles()->CliDisplayTable();

Log::information('Roles assigned to this user through its roles:');
$user->getRights()->CliDisplayTable();
