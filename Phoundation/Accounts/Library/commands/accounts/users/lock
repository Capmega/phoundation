#!/usr/bin/php
<?php

declare(strict_types=1);

use Phoundation\Accounts\Users\User;
use Phoundation\Cli\CliDocumentation;
use Phoundation\Data\Validator\ArgvValidator;
use Phoundation\Databases\Sql\Limit;


/**
 * Script accounts/users/lock
 *
 * This script can lock users
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */

CliDocumentation::autoComplete(User::getAutoComplete([
    'positions' => [
        0 => [
            'word'   => 'SELECT `email` FROM `accounts_users` WHERE `email` LIKE :word AND `status` IS NULL LIMIT ' . Limit::shellAutoCompletion(),
            'noword' => 'SELECT `email` FROM `accounts_users` WHERE `status` IS NULL LIMIT ' . Limit::shellAutoCompletion()
        ]
    ]
]));

CliDocumentation::usage('./pho accounts users lock USER_EMAIL');

CliDocumentation::help('This script will lock the specified user. Note that locked users will not be removed from
the database, the status for the user will be updated to "locked"

ARGUMENTS


USER_EMAIL                              The email address for the user to lock');


// Validate arguments
$argv = ArgvValidator::new()
    ->select('user')->isEmail()
    ->validate();


// Lock this user
User::get($argv['user'])->lock();
